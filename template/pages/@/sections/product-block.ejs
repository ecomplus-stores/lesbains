<%
const stamps = _.cms('stamps') || {}
let stampsList
if (stamps && Array.isArray(stamps.stamps_list) && stamps.stamps_list.length) {
  stampsList = stamps.stamps_list
}
%>

<div id="product-block" class="product-block">
  <div class="container-fluid px-md-0">
    <section
      id="product"
      class="product"
      data-to-render="true"
      data-product-id="<%= _.state._id %>"
      data-sku="<%= _.state.sku %>"
    >
      <div id="product-dock">
        <!--
          `TheProduct` should be rendered (hydrated) here:
          https://developers.e-com.plus/storefront/@ecomplus/storefront-components/docs/TheProduct.html
        -->
      </div>
      <div class="product-info-block d-block d-md-none pt-3 text-center justify-content-between align-items-center">
        <h1 class="product__name text-center">
          <%= _.ecomUtils.name(_.state) %>
        </h1>
        <div class="d-flex align-items-center mb-4">
          <p class="product__sku m-0">
            COD: <%= _.state.sku %>
          </p>
          <div class="sb-product-rating-meta ml-3">
            <div class="sb-product-testimonials-stars"></div>
            <div class="sb-product-testimonials-rating"></div>
          </div>
        </div>
       
      </div>
      <div class="row">
        <div class="col-12 col-md-7  pr-md-0 gallery-container">
          <!-- Picture(s) gallery will be inserted dynamically within `TheProduct` -->
          <!---->
          <div id="product-gallery"></div>
          <!-- <% if (_.state.pictures) { %>
            <% const imgObj = _.ecomUtils.img(_.state, null, 'big') %>
            <% if (imgObj) { %>
              <% const [width, height] = (imgObj.size || '').split('x').map(px => parseInt(px, 10)) %>
              <div id="product-gallery">
                <div data-slot="stamps">
                  <% if (Array.isArray(stampsList) && stampsList.length) { %>
                    <div class="product__stamps">
                      <% for (stamp of stampsList) { 
                        if (stamp.img && (!stamp.skus || !stamp.skus.length || stamp.skus.includes(_.state.sku))) {
                          %>
                          <span class="product__stamps-<%= stamp.id && stamp.id.toLowerCase().replace(/\s/g, '-') %>">
                            <img src="<%= stamp.img %>" alt="<%= stamp.id %>">
                          </span>
                        <% } %>
                      <% } %>
                    </div>
                  <% } %>
                </div>
                <div
                  class="product__picture"
                  <% if (width) { %>
                    style="max-width: <%= width %>px"
                  <% } %>  
                >
                  <picture
                    <% if (width && height) { %>
                      class="picture"
                      style="--aspect-ratio-pc: <%= Math.round(height * 100 * 10000 / width) / 10000 %>%"
                    <% } %>
                  >
                    <source
                      srcset="<%= _.ecomUtils.img(_.state).url %>"
                      type="image/webp"
                      media="(max-width: 399.98px)"
                    >
                    <source
                      srcset="<%= imgObj.url %>"
                      type="image/webp"
                      media="(min-width: 400px)"
                    >
                    <img
                      src="<%= imgObj.url.replace(/\.webp$/, '') %>"
                      alt="<%= imgObj.alt || _.state.name %>"
                      <% if (imgObj.url.startsWith('https://ecoms1.com/')) { %>
                        crossorigin="anonymous"
                      <% } %>
                      <% if (height) { %>
                        width="<%= width %>"
                        height="<%= height %>"
                      <% } %>
                    >
                  </picture>
                </div>
              </div>
            <% } %>
          <% } %> -->
          <!-- Custom additional code on bottom of images gallery -->
          <!--  -->
          
          <div id="sb-product-testimonials" class="m-md-5 m-t3">
            <div class="container">
              <div class="row" style="align-items:flex-start">
                <div id="sb-product-testimonials-set" class="col-md-12 mb-4 d-none">
                  <form>
                    <div class="row">
                      <div class="col-12"><h3 class="d-block mb-4">Você já comprou este item!</h3></div>
                    </div>
                    <div class="row align-items-center">
                      <div class="col-md-auto col-12 mb-md-0 mb-0">
                        <label for="textimonial">Deixe sua avaliação</label>
                      </div>
                      <div class="col-md-auto col-12">
                        <div class="sb-product-rating-set">
                          <button type="button"  rating="1"></button>
                          <button type="button" rating="2"></button>
                          <button type="button" rating="3"></button>
                          <button type="button" rating="4"></button>
                          <button type="button" class="active" rating="5"></button>
                          <input type="hidden" name="rating" value="5"/>
                        </div>
                        
                      </div>
                    </div>
                    <div class="row mt-3">
                      <div class="col-12">
                        <textarea name="testimonial" placeholder="Digite aqui o que você achou do produto. Se a qualidade é boa, se é bonito..."></textarea>
                      </div>
                    </div>
                    <div class="d-none">
                      <div class="row mt-4">
                        <div class="col-12">
                          <label for="files">Tirou fotos? Mostra pra gente!</label>
                        </div>              
                      </div>
                      <div class="row">
                        <div class="col-12">
                          <div id="files-image-cover">
                            <span>Adicionar Imagens</span>
                            <input type="file" multiple accept="image/*" name="files"/>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button type="submit" class="d-block mt-4">Enviar Avaliação</button>
                  </form>        
                </div>
                <div class="col" id="sb-product-testimonials-col">
                  <div id="sb-product-testimonials-header" class=" pb-4">
                    <div class="row align-items-center" >
                      <div class="col-auto">
                        <div class="sb-product-testimonials-rating">0</div>
                      </div>
                      <div class="col-auto pl-md-0">
                        <div class="sb-product-testimonials-stars"></div>
                      </div>
                    </div>
                    <div class="row justify-content-between align-items-center">
                      <div class="col-auto">
                        <p class="m-0">Com base em <span class="sb-product-testimonials-totals">0</span> avaliações</p>
                      </div>
                      <div class="col-auto">
                        <button type="button" data-order-field="rating" data-order-type="desc">Maior Nota</button>
                        <button type="button" data-order-field="rating" data-order-type="asc">Menor Nota</button>
                        <button type="button" data-order-field="createdAt" data-order-type="desc">Mais Recente</button>
                      </div>
                    </div>
                  </div>
                  <div id="sb-product-testimonials-body">
                    <template id="sb-product-testimonial-template">
                      <div data-testimonial-id="${id}" class="py-4">
                        <div class="row align-items-center justify-content-between">
                          <div class="col-auto">
                            <div class="d-flex align-items-center mb-2">
                              <b>${client_name}</b>
                              <div data-rating="${rating}" class="ml-4 sb-product-testimonial-stars"></div>
                            </div>
                            
                            <span class="d-flex align-items-center"><img src="/img/uploads/shield-empty.svg" class="mr-2">Comprador Verificado</span>
                            
                          </div>
                          <div class="col-auto">
                            <div class="testimonial-gallery" data-gallery="testimonial_${id}_gallery">
                              
                            </div>
                          </div>                    
                        </div>
                        <div class="row">
                          <div class="col-12">
                            <p class="my-md-4">${testimonial}</p>
                          </div>
                        </div>
                        <div class="row justify-content-between align-items-center">
                          <div class="col-auto">
                            <span>Publicado em: ${createdAt}</span>
                          </div>
                        </div>
                      </div>
                    </template>
                  </div>
                </div>
              </div>
            </div>            
          </div>
        </div>
        


        <div class="col-12 col-md-5 pt-md-5 pl-md-5 pr-md-5">
          <div id="sticker">
            <div class="product-info-block d-md-block d-none">
              <h1 class="product__name ">
                <%= _.ecomUtils.name(_.state) %>
              </h1>
              <div class="d-flex align-items-center mb-4">
                <p class="product__sku m-0">
                  COD: <%= _.state.sku %>
                </p>
                <div class="sb-product-rating-meta ml-3">
                  <div class="sb-product-testimonials-stars"></div>
                  <div class="sb-product-testimonials-rating"></div>
                </div>
              </div>
              
              
            </div>
            <% if (_.state.short_description) { %>
              <p class="product__info mt-3 lead">
                <%= _.state.short_description %>
              </p>
            <% } %>
          
             <hr class="mt-4 mb-0"></hr>
            <!--<div class="apx_tabs "> -->
              <!-- <% if (_.state.body_html) { %>
                <div class="item py-3">
                  <button type="button" class="w-100 d-flex align-items-center justify-content-between" data-tab="details">
                    Detalhes do Produto
                    <span>                            
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 7V17M7 12L17 12" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>

                    </span>
                  </button>
                </div>
                
              <% } %> -->
              <%
                const current_lib_ = []
                const apx_products_ = _.cms('apx_products_content')
                if (Array.isArray(apx_products_) && apx_products_.length > 0) {      
                  apx_products_.forEach(item => { 
                    const lib = (_.cms(`apx_products_content/${item}`))
                    if(current_lib_.length == 0 && (lib.identificador.find(el => el == _.state.sku) || lib.identificador == 'default')){
                      current_lib_.push(lib)
                      return
                    }
                    if(_.state.categories && _.state.categories.length > 0){
                      _.state.categories.forEach(cat => {
                        if(current_lib_.length == 0 && lib.identificador.find(el => el == 'cat_'+ cat._id)){
                          current_lib_.push(lib)
                          return
                        }
                      })
                    }
                  })
                }
                %>
                <script>
                  window.apx_lib_content = JSON.parse(<%- JSON.stringify(JSON.stringify(current_lib_[0] || [])) %>)
                </script>
                <!-- <%
                if(current_lib_ && current_lib_[0] && current_lib_[0].list){
                  Object.keys(current_lib_[0].list).forEach(key => {
                    
                    %>
                      <div class="item py-3">
                        <button type="button" class="w-100 d-flex align-items-center justify-content-between" data-tab="<%- key %>">
                          <%= current_lib_[0].list[key].title %>
                          <span>                            
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <path d="M12 7V17M7 12L17 12" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                              </svg>
  
                          </span>
                        </button>
                      </div>
                    <%
                  })
                }
                %> -->
            <!-- </div> -->
            <div id="product-actions">
              <div id="product-loading">
                <% if (_.state.available && _.state.visible && _.ecomUtils.inStock(_.state)) { %>
                  <div class="product__price prices prices--big">
                    <strong class="prices__value">
                      <%= _.ecomUtils.formatMoney(_.ecomUtils.price(_.state)) %>
                    </strong>
                  </div>
                <% } %>

                <% if (_.state.variations && _.state.variations.length) { %>
                  <div data-slot="variations-info">
                    <!-- Custom info for products with variations, such as sizes table link -->
                    <% if (opt.size_guide && opt.size_guide.image) { %>
                      <% const sizeGuideTitle = opt.size_guide.title || _.dictionary('sizeGuide') %>
                      <div class="mb-3">
                        <a 
                          href="javascript:;"
                          data-toggle="modal"
                          data-target="#modal-size-guide"
                        >
                          <i class="i-ruler mr-1"></i> <%= sizeGuideTitle %>
                        </a>
                      </div>
                      <div 
                        class="modal modal-center fade" 
                        id="modal-size-guide" 
                        tabindex="-1" 
                        style="display: none;" 
                        aria-hidden="true"
                      >
                        <div class="modal-dialog">
                          <div class="modal-content">
                            <div class="modal-header d-flex align-items-center justify-content-between">
                              <h5 class="modal-title">
                                <%= sizeGuideTitle %>
                              </h5>
                              <button type="button" class="close" data-dismiss="modal">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            <div class="modal-body">
                              <img 
                                class="img-fluid" 
                                src="<%= opt.size_guide.image %>" 
                                alt="<%= sizeGuideTitle %>"
                              >
                            </div>
                          </div>
                        </div>
                      </div>
                    <% } %>
                  </div>
                <% } %>

                

                <div class="spinner-border m-4" role="status">
                  <span class="sr-only">Loading...</span>
                </div>

                <div class="product__buy">
                  <button
                    type="button"
                    class="btn btn-lg btn-primary"
                    onclick="ecomCart.addProduct(storefront.context.body)"
                    <% if (_.state.variations && _.state.variations.length) { %>
                      disabled
                    <% } %>
                  >
                    <div data-slot="buy-button-content">
                      <% if (_.state.kit_composition && _.state.kit_composition.length) { %>
                        <%= _.dictionary('buyKit') %>
                      <% } else { %> 
                        <% let buyText %>
                        <% if (Array.isArray(_.widgets)) { %>
                          <% const productWidget = _.widgets.find(item => item.pkg === '@ecomplus/widget-product') %>
                          <% buyText = productWidget && productWidget.options.buyText %>
                        <% } %>
                        <!-- <%= buyText || _.dictionary('buy') %> -->
                        Adicionar ao Carrinho
                        
                      <% } %>
                    </div>
                  </button>
                </div>
              </div>
            </div>
            
          </div>         
        </div>
      </div>

      <%- await include('@/helpers/widgets-append', {
        _, opt: {}, field: 'productSlots'
      }) %>
    </section>
    
    <div class="extra-content">
      <%
      // load page sections and render each one
      const { sections } = _.state
      if (Array.isArray(sections)) {
        for (let i = 0; i < sections.length; i++) {
          const opt = sections[i]
          if (opt && opt.enabled !== false && opt.type != "product-block" && opt.type != "breadcrumbs" && opt.type != "product-description") {
            %>
            <%- await include(`@/sections/${opt.type}`, { _, opt }) %>
            <%
          }
        }
      }
      %>   
    </div>
  
    <%- await include('@/helpers/widgets-append', {
      _, opt: {}, field: 'productBlockAppend'
    }) %>

    
  </div>
  <!-- <div class="sections pb-1 pb-sm-2 pb-lg-4 mt-md-5 pt-5"> -->
    <%
    const current_lib = []
    const apx_products = _.cms('apx_products')
    if (Array.isArray(apx_products) && apx_products.length > 0) {      
      apx_products.forEach(item => { 
        const lib = (_.cms(`apx_products/${item}`))
        if(current_lib.length == 0 && lib.identificador.find(el => el == _.state.sku)){
          current_lib.push(lib)
          return
        }
        if(_.state.categories && _.state.categories.length > 0){
          _.state.categories.forEach(cat => {
            if(current_lib.length == 0 && lib.identificador.find(el => el == 'cat_'+ cat._id)){
              current_lib.push(lib)
              return
            }
          })
        }
      })
    }
       
    %>
    
    <div data-customizations="<%= current_lib && current_lib[0] && current_lib[0].customizations ? JSON.stringify(current_lib[0].customizations) : '' %>"></div>
    <% if (current_lib && current_lib[0]) { %>
      <script>
        window.apx_lib = JSON.parse(<%- JSON.stringify(JSON.stringify(current_lib[0])) %>);
        </script>
    <% }else{ %>
      <script>window.apx_lib = []</script>
    <% } %>
    <script>
      window.apx_product = JSON.parse(<%- JSON.stringify(JSON.stringify(_.state)) %>);
    </script>


    
    <!-- <script>
      //STOREBOOST TESTIMONIAL SCRIPT
      window.sb_Testimonial = {
          storeId : 25,
          application : 'customer-review',
          searchField : 'product_main_sku',
          searchValue : '<%- _.state.sku %>',
          page: 0,
          pageSize: 5,
          config : {
            SB_productRatingClass : 'sb-product-testimonials-rating',
            SB_productRatingStarsClass : 'sb-product-testimonials-stars',
            SB_productTestimonialTotalClass : 'sb-product-testimonials-totals',
            SB_testimonialListId : 'sb-product-testimonials-body'
          },
          headers : {
          'Content-Type': 'application/json'          
          },
          placeDOM : function(){

          },
          placeTestimonials : function(data){
            const template = document.getElementById('sb-product-testimonial-template');
            if(template){
              data.forEach(post => {
                const clone = template.content.cloneNode(true);
                let templateString = clone.firstElementChild.outerHTML;
                //console.log(`post`,post)
                templateString = templateString
                    .replace(/\$\{id\}/g, post.id)
                    .replace(/\$\{client_name\}/g, post.client_name)
                    .replace(/\$\{rating\}/g, post.rating)
                    //.replace(/\$\{gallery\[0\].url\}/g, post.gallery[0].url)
                    //.replace(/\$\{gallery\[0\].formats\[0\].url\}/g, post.gallery[0].formats[0].url)
                    .replace(/\$\{testimonial\}/g, post.testimonial)
                    .replace(/\$\{createdAt\}/g, window.sb_Testimonial.formatDate(post.createdAt)); 
                const div = $(templateString);                
                if(post.gallery){
                  //let gallery = div.find(`.testimonial_${post.id}_gallery`);
                  let gallery = div.find(`.testimonial-gallery`);
                  $.each(post.gallery, function(k,i){
                    gallery.append(`<a data-pswp-width="${i.width}" data-pswp-height="${i.height}"
                    href="${i.url}" data-lightbox="testimonial_${post.id}_gallery"><img src="${i.formats.thumbnail.url}"/></a>`)
                  })                  
                }
                

                $(`#` + window.sb_Testimonial.config.SB_testimonialListId).append(div);

                // if(post.gallery){
                //   const gallerySelector = `[data-gallery="testimonial_${post.id}_gallery"]`;
                //   //window.initializePhotoSwipeLightbox(gallerySelector);
                //   $(gallerySelector).fancybox({
                //       selector : 'a'
                //   });
                // }
              });
            }
            
          },
          getProductRating: function(){
            window.sb_Testimonial.isActive = false;
            window.sb_Testimonial.ratingUrl = `https://app.storeboost.com.br/api/data/related/get/${window.sb_Testimonial.storeId}/${window.sb_Testimonial.application}/product-rating/1/1/${window.sb_Testimonial.searchField}/${window.sb_Testimonial.searchValue}`;
            const elStars = document.getElementsByClassName( window.sb_Testimonial.config.SB_productRatingClass);
            const elStarsIco = document.getElementsByClassName( window.sb_Testimonial.config.SB_productRatingStarsClass);
            const elTotals = document.getElementsByClassName( window.sb_Testimonial.config.SB_productTestimonialTotalClass);
            if(elStars){
              fetch( window.sb_Testimonial.ratingUrl, {
                method: 'GET',
                headers: window.sb_Testimonial.headers            
              })
                .then(response => response.json())
                .then(data => {
                  //console.log(data)
                  if (data && data[0] && data[0].rating) {
                      const ratingValue = data[0].rating.toFixed(1);
                      for (let i = 0; i < elStars.length; i++) {
                          elStars[i].setAttribute('data-stars', ratingValue);
                          elStars[i].innerHTML = ratingValue
                      }

                      let elStarsDOM = $(`<div class="sb-rating-stars"></div>`);
                      for(let i = 1; i<= 5; i++){
                        if(i <= ratingValue){
                          elStarsDOM.append('<i class="sbStar star-full"></i>')  
                          
                        }else{
                          if(ratingValue > i - 1){
                              elStarsDOM.append('<i class="sbStar star-half"></i>')
                            }else{
                              elStarsDOM.append('<i class="sbStar star-empty"></i>')
                            }                          
                        }
                      }

                      for (let i = 0; i < elStarsIco.length; i++) {
                          //elStars[i].setAttribute('data-stars', ratingValue);
                          elStarsIco[i].innerHTML = elStarsDOM.html()
                      }
                      

                      const totalReviews = data[0].total_reviews
                      for (let i = 0; i < elTotals.length; i++) {
                        elTotals[i].setAttribute('data-totals', totalReviews);
                        elTotals[i].innerHTML = totalReviews
                      }
                  } else {
                      console.error('SB_Testimonials_Rating - Rating not found in response');
                  }
                  //console.log('SB_Testimonials_Rating - OK');
                })
                .catch(error => {
                  console.error('SB_Testimonials_Rating - ERR');
                });
            }else{
              console.error('SB_Testimonials_Rating - Set elements on DOM before any call');
            }
            
          },
          getTestimonials: function(){
            window.sb_Testimonial.page++;
            window.sb_Testimonial.listingUrl = `https://app.storeboost.com.br/api/data/get/${window.sb_Testimonial.storeId}/${window.sb_Testimonial.application}/${window.sb_Testimonial.page}/${window.sb_Testimonial.pageSize}/${window.sb_Testimonial.searchField}/${window.sb_Testimonial.searchValue}`;
            //const elStars = document.getElementById( window.sb_Testimonial.config.SB_productStarId);
            const elList = document.getElementById( window.sb_Testimonial.config.SB_testimonialListId);
            if(elList){
              fetch( window.sb_Testimonial.listingUrl, {
                method: 'GET',
                headers: window.sb_Testimonial.headers            
              })
                .then(response => response.json())
                .then(data => {
                  window.sb_Testimonial.placeTestimonials(data);
                  //console.log('SB_Testimonials - OK');
                })
                .catch(error => {
                  console.error('SB_Testimonials - ERR');
                });
            }else{
              console.error('SB_Testimonials - Set elements on DOM before any call');
            }
          },
          formatDate: function(dateStr){
            const date = new Date(dateStr); 
            const day = String(date.getUTCDate()).padStart(2, '0'); 
            const month = String(date.getUTCMonth() + 1).padStart(2, '0');
            const year = date.getUTCFullYear();

            const formattedDate = `${day}/${month}/${year}`;

            return formattedDate
          }
                  
        }
        document.addEventListener('DOMContentLoaded', (event) => {
          if(window.sb_Testimonial.isActive){
            window.sb_Testimonial.getProductRating()
            window.sb_Testimonial.getTestimonials()

            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.addedNodes.length) {
                      
                    }
                });
            });
            const galleryContainer = document.querySelector('#sb-product-testimonials-body');
            observer.observe(galleryContainer, { childList: true, subtree: true });
          }
          
        })
    </script>
     -->
     
  <!-- </div> -->
   
  
</div>
<div class="apx_tabs_content">
  <% if (_.state.body_html && /[a-zA-Z]/.test(_.state.body_html)) { %>
    <div class="_details content">
      <div class="apx_backdrop" data-tab="details"></div>
      <div class="container-fluid p-0">
        <div class="heading py-3 px-4 position-relative">
          Detalhes do Produto
          <button type="button" class="apx_close" data-tab="details"></button>
        </div>
        <div class="py-3 px-4 markdown html-clearfix my-0">
          <%- _.state.body_html.replace(
            /<img ([^/>]+)?src=['"]([^'"]+)['"]([^/>]+)?\/?>/g,
            '<img class="lozad" data-src="$2" $1 $3>'
          ).replace(
            /<img class="lozad" data-src="([^'"]+)"([^>]+)class=['"]([^'"]+)['"]([^/>]+)?>/g,
            '<img class="lozad $3" data-src="$1" $2 $4>'
          ) %>
        </div>
        
      </div>
    </div>
  <% } %>
  <% if (_.state.specifications) { %>
    <div class="_properties content">
      <div class="apx_backdrop" data-tab="properties"></div>
      <div class="container-fluid p-0">
        <div class="heading py-3 px-4 position-relative">
          Características
          <button type="button" class="apx_close" data-tab="properties"></button>
        </div>
        <div class="py-3 px-4 markdown html-clearfix my-0">
            <% if (_.state.specifications) { %>
              <section id="product-specs" class="product-specs">
                <div class="">
                  <ul class="p-0 m-0">
                    
                      <% for (const gridId in _.state.specifications) {
                        if (_.state.specifications[gridId]) {
                          %>
                          <li>
                            <div class="text-muted">
                              <%= _.ecomUtils.gridTitle(gridId, _.grids) %>
                            </div>
                            <div>
                              <%= _.ecomUtils.specTextValue(_.state, gridId, _.grids) %>
                            </div>
                          </li>
                          <%
                        }
                      } %>
                    
                  </ul>
                </div>
              </section>
            <% } %>       
            <% if (_.ecomUtils.name(_.state).toLowerCase().includes(`óculos`)){%>
            <img src="/img/medidas2.jpg"/>
            <% } %>
        </div>
        
      </div>
    </div>
  <% } %>
<%
if(current_lib_ && current_lib_[0] && current_lib_[0].list){
  Object.keys(current_lib_[0].list).forEach(key => {
    %>
      
        <div class="_<%- key %> content">
          <div class="apx_backdrop" data-tab="<%= key %>"></div>
          <div class="container-fluid p-0">
            <div class="heading py-3 px-4 position-relative">
              <%= current_lib_[0].list[key].title %>
              <button type="button" class="apx_close" data-tab="<%= key %>"></button>
            </div>
            <div class="py-3 px-4 markdown html-clearfix my-0">
              <%- _.md.render(current_lib_[0].list[key].content) %>
            </div>
          </div>
        </div>
      
    <%
  })
}
%>
</div>


<script>
const SB_URL = "https://api.storeboost.com.br";
// const SB_URL = "http://localhost:1337";
//STOREBOOST TESTIMONIAL SCRIPT
const sb_Testimonial = {
    storeId : 25,
    application : 'customer-review',
    searchField : 'product_main_sku',
    searchValue : '<%- _.state.sku %>',
    page: 0,
    pageSize: 5,
    config : {
      SB_productRatingClass : 'sb-product-testimonials-rating',
      SB_productRatingStarsClass : 'sb-product-testimonials-stars',
      SB_productTestimonialTotalClass : 'sb-product-testimonials-totals',
      SB_testimonialListId : 'sb-product-testimonials-body'
    },
    client_name: null,
    headers : {
    'Content-Type': 'application/json'          
    },
    placeDOM : function(){

    },
    placeTestimonials : function(data){
      const template = document.getElementById('sb-product-testimonial-template');
      if(template){
        data.forEach(post => {
          const clone = template.content.cloneNode(true);
          let templateString = clone.firstElementChild.outerHTML;
          ////console.log(`post`,post)
          templateString = templateString
              .replace(/\$\{id\}/g, post.id)
              .replace(/\$\{client_name\}/g, post.client_name)
              .replace(/\$\{rating\}/g, post.rating)
              //.replace(/\$\{gallery\[0\].url\}/g, post.gallery[0].url)
              //.replace(/\$\{gallery\[0\].formats\[0\].url\}/g, post.gallery[0].formats[0].url)
              .replace(/\$\{testimonial\}/g, post.testimonial)
              .replace(/\$\{createdAt\}/g, sb_Testimonial.formatDate(post.createdAt)); 
          let div = $(templateString);    
          
          let elStarsDOM = div.find(`[data-rating]`)
          for(let i = 1; i<= 5; i++){
            if(i <= post.rating){
              elStarsDOM.append('<i class="sbStar star-full"></i>')  
              
            }else{
              if(post.rating > i - 1){
                  elStarsDOM.append('<i class="sbStar star-half"></i>')
                }else{
                  elStarsDOM.append('<i class="sbStar star-empty"></i>')
                }                          
            }
          }
          
          // if(post.gallery){
          //   let gallery = div.find(`.testimonial-gallery`);
          //   $.each(post.gallery, function(k,i){
          //     gallery.append(`<a data-pswp-width="${i.width}" data-pswp-height="${i.height}"
          //     href="${i.url}" data-lightbox="testimonial_${post.id}_gallery"><img src="${i.formats.thumbnail.url}"/></a>`)
          //   })                  
          // }
          

          $(`#` + sb_Testimonial.config.SB_testimonialListId).append(div);

          // if(post.gallery){
          //   const gallerySelector = `[data-gallery="testimonial_${post.id}_gallery"]`;
          //   //window.initializePhotoSwipeLightbox(gallerySelector);
          //   $(gallerySelector).fancybox({
          //       selector : 'a'
          //   });
          // }
        });
      }
      
    },
    getProductRating: function(){
      sb_Testimonial.ratingUrl = `${SB_URL}/api/data/related/get/${sb_Testimonial.storeId}/${sb_Testimonial.application}/product-rating/1/1/${sb_Testimonial.searchField}/${sb_Testimonial.searchValue}`;
      const elStars = document.getElementsByClassName( sb_Testimonial.config.SB_productRatingClass);
      const elStarsIco = document.getElementsByClassName( sb_Testimonial.config.SB_productRatingStarsClass);
      const elTotals = document.getElementsByClassName( sb_Testimonial.config.SB_productTestimonialTotalClass);
      if(elStars){
        fetch( sb_Testimonial.ratingUrl, {
          method: 'GET',
          headers: sb_Testimonial.headers            
        })
          .then(response => response.json())
          .then(data => {
            //console.log(data)
            if (data && data[0] && data[0].rating) {
                const ratingValue = data[0].rating.toFixed(1);
                for (let i = 0; i < elStars.length; i++) {
                    elStars[i].setAttribute('data-stars', ratingValue);
                    elStars[i].innerHTML = ratingValue
                }

                let elStarsDOM = $(`<div class="sb-rating-stars"></div>`);
                for(let i = 1; i<= 5; i++){
                  if(i <= ratingValue){
                    elStarsDOM.append('<i class="sbStar star-full"></i>')  
                    
                  }else{
                    if(ratingValue > i - 1){
                        elStarsDOM.append('<i class="sbStar star-half"></i>')
                      }else{
                        elStarsDOM.append('<i class="sbStar star-empty"></i>')
                      }                          
                  }
                }

                for (let i = 0; i < elStarsIco.length; i++) {
                    //elStars[i].setAttribute('data-stars', ratingValue);
                    elStarsIco[i].innerHTML = elStarsDOM.html()
                }
                

                const totalReviews = data[0].total_reviews
                for (let i = 0; i < elTotals.length; i++) {
                  elTotals[i].setAttribute('data-totals', totalReviews);
                  elTotals[i].innerHTML = totalReviews
                }

                window.sb_rating = {ratingValue: ratingValue, reviewCount: totalReviews}
                
            } else {
                window.sb_rating = {ratingValue: 0, reviewCount: 0}
                console.error('SB_Testimonials_Rating - Rating not found in response');
                $(`#sb-product-testimonials-col`).hide()
            }
            //window.sb_rating = {ratingValue: 0, reviewCount: 0}

            
            //console.log('SB_Testimonials_Rating - OK');
          })
          .catch(error => {
            console.error('SB_Testimonials_Rating - ERR');
          });

          $('.sb-product-rating-meta').click(function(){
            const target = document.getElementById('sb-product-testimonials');
            if (target) {
              window.scrollTo({
                top: target.offsetTop, 
                behavior: 'smooth' // Rola suavemente
              });
            }            
          })
      }else{
        console.error('SB_Testimonials_Rating - Set elements on DOM before any call');
      }
      
    },
    getTestimonials: function(params, page){
      sb_Testimonial.page = page == 0 ? 0 : sb_Testimonial.page;
      if(sb_Testimonial.page == 0){
        $(`#sb-product-testimonials-body > div`).remove();
      }
      sb_Testimonial.page++;
      sb_Testimonial.listingUrl = `${SB_URL}/api/data/get/${sb_Testimonial.storeId}/${sb_Testimonial.application}/${sb_Testimonial.page}/${sb_Testimonial.pageSize}/${sb_Testimonial.searchField}/${sb_Testimonial.searchValue}${params}`;
      const elList = document.getElementById( sb_Testimonial.config.SB_testimonialListId);
      if(elList){
        fetch( sb_Testimonial.listingUrl, {
          method: 'GET',
          headers: sb_Testimonial.headers            
        })
          .then(response => response.json())
          .then(data => {
            window.apx.loading(false);
            sb_Testimonial.placeTestimonials(data);
            //console.log('SB_Testimonials - OK');
          })
          .catch(error => {
            window.apx.loading(false);
            console.error('SB_Testimonials - ERR');
          });
      }else{
        window.apx.loading(false);
        console.error('SB_Testimonials - Set elements on DOM before any call');
      }
    },
    formatDate: function(dateStr){
      const date = new Date(dateStr); 
      const day = String(date.getUTCDate()).padStart(2, '0'); 
      const month = String(date.getUTCMonth() + 1).padStart(2, '0');
      const year = date.getUTCFullYear();

      const formattedDate = `${day}/${month}/${year}`;

      return formattedDate
    },
    canSetTestimonial: async function(){        
      if(window.EcomPassport){
        let client_name = await window.EcomPassport.ecomPassport.getCustomer().display_name;
        let orders = await EcomPassport.ecomPassport.fetchOrdersList()
        let q = orders.filter(order => order.items.find( item => item.product_id == "<%= _.state._id %>"))
        //console.log('orders',q)
        if(q.length > 0){
          const elList = document.getElementById( sb_Testimonial.config.SB_testimonialListId);
          if(elList){
          //console.log('aa')
            fetch(`${SB_URL}/api/data/check/${sb_Testimonial.storeId}/${sb_Testimonial.application}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({data:{
                  filters:[
                    {
                      fieldName: 'product_main_sku',
                      searchValue: "<%= _.state.sku %>"
                    },
                    {
                      fieldName: 'order_id',
                      searchValue: q[0].number
                    }
                  ]
                }})
            })              
              .then(response => response.json())
              .then(data => {
                //console.log('bb',data)
                if(!data.status){
                  $(`body`).on(`click`,`.sb-product-rating-set button`, function(){
                    let rating = $(this).attr(`rating`);
                    let list = $(this).closest(`.sb-product-rating-set`);
                    list.find(`.active`).removeClass(`active`)
                    $(this).addClass(`active`)
                    list.find(`input`).val(rating)
                  });
                  $(`#sb-product-testimonials-set form`).submit(async function(e){
                    e.preventDefault();
                    window.apx.loading(true);
                    let me = $(this)
                    const testimonial = me.find(`[name="testimonial"]`).val();
                    const rating = me.find(`[name="rating"]`).val();              
                    const product_id = "<%= _.state._id %>";
                    const product_main_sku = "<%= _.state.sku %>";
                    const order_id = q[0].number;
                    const data = {
                        testimonial: testimonial,
                        rating: parseInt(rating),
                        product_main_sku: product_main_sku,
                        product_id: product_id,
                        client_name: client_name,
                        order_id : order_id.toString(),
                        active: true,
                        filters: []
                    };

                    await fetch(`${SB_URL}/api/data/set/${sb_Testimonial.storeId}/${sb_Testimonial.application}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({data:data})
                    })
                    .then(response => response.json())
                    .then(data => {
                        alert(data.response || "Obrigado! Seu depoimento foi registrado");
                        window.apx.loading(false)
                    })
                    .catch((error) => {
                      alert('Houve um erro ao enviar o formulário.');
                      window.apx.loading(false)
                    })
                  });
                  
                  $(`#sb-product-testimonials-set`).removeClass(`d-none`)
                }else{
                  $(`#sb-product-testimonials-set`).remove()
                }
                
              })
              .catch(error => {
                console.error('SB_Testimonials - ERR');
              });
          }else{
            console.error('SB_Testimonials - Set elements on DOM before any call');
          }
        }
      }
    }, 
    filterAndOrderTestimonials(){
      $(`#sb-product-testimonials-header button`).click(function(){
        $(`#sb-product-testimonials-header button`).removeClass(`active`);
        $(this).addClass(`active`);

        let field = $(this).attr(`data-order-field`);
        let type = $(this).attr(`data-order-type`);

        let params = `?orderBy=${field}&type=${type}`
        window.apx.loading(true);
        
        sb_Testimonial.getTestimonials(params, 0)
       

      })
    }             
  }
  document.addEventListener('DOMContentLoaded', (event) => {
    if(window.innerWidth < 990){
      $('#sb-product-testimonials').insertBefore('.extra-content')
    }
    sb_Testimonial.getProductRating()
    sb_Testimonial.getTestimonials('',0)
    sb_Testimonial.canSetTestimonial()
    sb_Testimonial.filterAndOrderTestimonials()
  })
</script>
<%
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: _.state.sku,
  description: _.state.short_description || _.state.meta_description || _.ecomUtils.name(_.state),
  name: _.ecomUtils.name(_.state),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${_.state.slug}`,
    availability: `${(_.ecomUtils.inStock(_.state) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(_.state),
    itemCondition: `http://schema.org/${(_.state.condition === 'new' ? 'New' : 'Used')}Condition`,
    priceValidUntil: _.ecomUtils.onPromotion(_.state) && _.state.price_effective_date && _.state.price_effective_date.end
      ? _.state.price_effective_date.end.slice(0, 10)
      : undefined,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}
if (_.state.brands && _.state.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: _.state.brands[0].name
  }
}
if (_.state.pictures && _.state.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(_.state, null, 'zoom').url
    .replace(/(\w+\.)?(ecoms\d)\.com/i, '$2-nyc3.nyc3.cdn.digitaloceanspaces.com')
}
if (_.state.mpn && _.state.mpn[0]) {
  productJsonLd.mpn = _.state.mpn[0]
}
if (_.state.gtin && _.state.gtin[0]) {
  productJsonLd.gtin = _.state.gtin[0]
}
%>
<script id="product-block-jsonld" type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>
<script type="text/javascript">
  setTimeout(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const variationId = urlParams.get('variation_id');
    const variations = window._context.body && window._context.body.variations;
    if (Array.isArray(variations) && variationId) {
      const selectedVariation = variations.find(variation => variation._id === variationId);
      if (selectedVariation) {
        const $jsonLd = document.querySelector('#product-block-jsonld');
        const jsonLd = JSON.parse($jsonLd.innerText);
        jsonLd.sku = selectedVariation.sku;
        jsonLd.offers.price = selectedVariation.price;
        jsonLd.name = (selectedVariation.name && selectedVariation.name.replace('"', '')) || jsonLd.name;
        jsonLd.offers.url = `${jsonLd.offers.url}?variation_id=${variationId}`;
        const interval = setInterval(() => {
          if (window.sb_rating) {
            jsonLd.aggregateRating = {
              "@type": "AggregateRating",
              "ratingValue": window.sb_rating.ratingValue,
              "reviewCount": window.sb_rating.reviewCount
            };
            document.querySelector('#product-block-jsonld').innerText = JSON.stringify(jsonLd);
            clearInterval(interval); // Para o intervalo após adicionar o aggregateRating
          }
        }, 1000); // Tenta novamente a cada 1 segundo
        //console.log('hahaha',jsonLd)
        document.querySelector('#product-block-jsonld').innerText = JSON.stringify(jsonLd);
      }
    }
  }, 50);
</script>
