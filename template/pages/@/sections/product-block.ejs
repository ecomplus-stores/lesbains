<%
const stamps = _.cms('stamps') || {}
let stampsList
if (stamps && Array.isArray(stamps.stamps_list) && stamps.stamps_list.length) {
  stampsList = stamps.stamps_list
}
%>

<div id="product-block" class="product-block">
  <div class="container-fluid px-md-0">
    <section
      id="product"
      class="product"
      data-to-render="true"
      data-product-id="<%= _.state._id %>"
      data-sku="<%= _.state.sku %>"
    >
      <div id="product-dock">
        <!--
          `TheProduct` should be rendered (hydrated) here:
          https://developers.e-com.plus/storefront/@ecomplus/storefront-components/docs/TheProduct.html
        -->
      </div>
      <div class="product-info-block d-block d-md-none pt-3 text-center justify-content-between align-items-center">
        <h1 class="product__name text-center">
          <%= _.ecomUtils.name(_.state) %>
        </h1>
        <p class="product__sku">
          COD: <%= _.state.sku %>
        </p>
      </div>
      <div class="row">
        <div class="col-12 col-md  pr-md-0 gallery-container">
          <!-- Picture(s) gallery will be inserted dynamically within `TheProduct` -->
          <!---->
          <div id="product-gallery"></div>
          <!-- <% if (_.state.pictures) { %>
            <% const imgObj = _.ecomUtils.img(_.state, null, 'big') %>
            <% if (imgObj) { %>
              <% const [width, height] = (imgObj.size || '').split('x').map(px => parseInt(px, 10)) %>
              <div id="product-gallery">
                <div data-slot="stamps">
                  <% if (Array.isArray(stampsList) && stampsList.length) { %>
                    <div class="product__stamps">
                      <% for (stamp of stampsList) { 
                        if (stamp.img && (!stamp.skus || !stamp.skus.length || stamp.skus.includes(_.state.sku))) {
                          %>
                          <span class="product__stamps-<%= stamp.id && stamp.id.toLowerCase().replace(/\s/g, '-') %>">
                            <img src="<%= stamp.img %>" alt="<%= stamp.id %>">
                          </span>
                        <% } %>
                      <% } %>
                    </div>
                  <% } %>
                </div>
                <div
                  class="product__picture"
                  <% if (width) { %>
                    style="max-width: <%= width %>px"
                  <% } %>  
                >
                  <picture
                    <% if (width && height) { %>
                      class="picture"
                      style="--aspect-ratio-pc: <%= Math.round(height * 100 * 10000 / width) / 10000 %>%"
                    <% } %>
                  >
                    <source
                      srcset="<%= _.ecomUtils.img(_.state).url %>"
                      type="image/webp"
                      media="(max-width: 399.98px)"
                    >
                    <source
                      srcset="<%= imgObj.url %>"
                      type="image/webp"
                      media="(min-width: 400px)"
                    >
                    <img
                      src="<%= imgObj.url.replace(/\.webp$/, '') %>"
                      alt="<%= imgObj.alt || _.state.name %>"
                      <% if (imgObj.url.startsWith('https://ecoms1.com/')) { %>
                        crossorigin="anonymous"
                      <% } %>
                      <% if (height) { %>
                        width="<%= width %>"
                        height="<%= height %>"
                      <% } %>
                    >
                  </picture>
                </div>
              </div>
            <% } %>
          <% } %> -->
          <!-- Custom additional code on bottom of images gallery -->
          <!-- <div class="extra-content">
            <%
            // load page sections and render each one
            const { sections } = _.state
            if (Array.isArray(sections)) {
              for (let i = 0; i < sections.length; i++) {
                const opt = sections[i]
                if (opt && opt.enabled !== false && opt.type != "product-block" && opt.type != "breadcrumbs" && opt.type != "product-description") {
                  %>
                  <%- await include(`@/sections/${opt.type}`, { _, opt }) %>
                  <%
                }
              }
            }
            %>   
          </div> -->
          <div id="sb-product-testimonials"></div>
        </div>

        <div class="col-12 col-md-5 pt-md-5 pl-md-5 pr-md-5">
          <div id="sticker">
            <div class="product-info-block d-md-block d-none">
              <h1 class="product__name ">
                <%= _.ecomUtils.name(_.state) %>
              </h1>
              <p class="product__sku">
                COD: <%= _.state.sku %>
              </p>
              <div id="sb-reviews-product-rating"></div>
            </div>
            <% if (_.state.short_description) { %>
              <p class="product__info mt-3 lead">
                <%= _.state.short_description %>
              </p>
            <% } %>
          
             <hr class="mt-4 mb-0"></hr>
            <!--<div class="apx_tabs "> -->
              <!-- <% if (_.state.body_html) { %>
                <div class="item py-3">
                  <button type="button" class="w-100 d-flex align-items-center justify-content-between" data-tab="details">
                    Detalhes do Produto
                    <span>                            
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 7V17M7 12L17 12" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>

                    </span>
                  </button>
                </div>
                
              <% } %> -->
              <%
                const current_lib_ = []
                const apx_products_ = _.cms('apx_products_content')
                if (Array.isArray(apx_products_) && apx_products_.length > 0) {      
                  apx_products_.forEach(item => { 
                    const lib = (_.cms(`apx_products_content/${item}`))
                    if(current_lib_.length == 0 && (lib.identificador.find(el => el == _.state.sku) || lib.identificador == 'default')){
                      current_lib_.push(lib)
                      return
                    }
                    if(_.state.categories && _.state.categories.length > 0){
                      _.state.categories.forEach(cat => {
                        if(current_lib_.length == 0 && lib.identificador.find(el => el == 'cat_'+ cat._id)){
                          current_lib_.push(lib)
                          return
                        }
                      })
                    }
                  })
                }
                %>
                <script>
                  window.apx_lib_content = JSON.parse(<%- JSON.stringify(JSON.stringify(current_lib_[0] || [])) %>)
                </script>
                <!-- <%
                if(current_lib_ && current_lib_[0] && current_lib_[0].list){
                  Object.keys(current_lib_[0].list).forEach(key => {
                    
                    %>
                      <div class="item py-3">
                        <button type="button" class="w-100 d-flex align-items-center justify-content-between" data-tab="<%- key %>">
                          <%= current_lib_[0].list[key].title %>
                          <span>                            
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <path d="M12 7V17M7 12L17 12" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                              </svg>
  
                          </span>
                        </button>
                      </div>
                    <%
                  })
                }
                %> -->
            <!-- </div> -->
            <div id="product-actions">
              <div id="product-loading">
                <% if (_.state.available && _.state.visible && _.ecomUtils.inStock(_.state)) { %>
                  <div class="product__price prices prices--big">
                    <strong class="prices__value">
                      <%= _.ecomUtils.formatMoney(_.ecomUtils.price(_.state)) %>
                    </strong>
                  </div>
                <% } %>

                <% if (_.state.variations && _.state.variations.length) { %>
                  <div data-slot="variations-info">
                    <!-- Custom info for products with variations, such as sizes table link -->
                    <% if (opt.size_guide && opt.size_guide.image) { %>
                      <% const sizeGuideTitle = opt.size_guide.title || _.dictionary('sizeGuide') %>
                      <div class="mb-3">
                        <a 
                          href="javascript:;"
                          data-toggle="modal"
                          data-target="#modal-size-guide"
                        >
                          <i class="i-ruler mr-1"></i> <%= sizeGuideTitle %>
                        </a>
                      </div>
                      <div 
                        class="modal modal-center fade" 
                        id="modal-size-guide" 
                        tabindex="-1" 
                        style="display: none;" 
                        aria-hidden="true"
                      >
                        <div class="modal-dialog">
                          <div class="modal-content">
                            <div class="modal-header d-flex align-items-center justify-content-between">
                              <h5 class="modal-title">
                                <%= sizeGuideTitle %>
                              </h5>
                              <button type="button" class="close" data-dismiss="modal">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            <div class="modal-body">
                              <img 
                                class="img-fluid" 
                                src="<%= opt.size_guide.image %>" 
                                alt="<%= sizeGuideTitle %>"
                              >
                            </div>
                          </div>
                        </div>
                      </div>
                    <% } %>
                  </div>
                <% } %>

                

                <div class="spinner-border m-4" role="status">
                  <span class="sr-only">Loading...</span>
                </div>

                <div class="product__buy">
                  <button
                    type="button"
                    class="btn btn-lg btn-primary"
                    onclick="ecomCart.addProduct(storefront.context.body)"
                    <% if (_.state.variations && _.state.variations.length) { %>
                      disabled
                    <% } %>
                  >
                    <div data-slot="buy-button-content">
                      <% if (_.state.kit_composition && _.state.kit_composition.length) { %>
                        <%= _.dictionary('buyKit') %>
                      <% } else { %> 
                        <% let buyText %>
                        <% if (Array.isArray(_.widgets)) { %>
                          <% const productWidget = _.widgets.find(item => item.pkg === '@ecomplus/widget-product') %>
                          <% buyText = productWidget && productWidget.options.buyText %>
                        <% } %>
                        <%= buyText || _.dictionary('buy') %>
                        
                      <% } %>
                    </div>
                  </button>
                </div>
              </div>
            </div>
            
          </div>         
        </div>
      </div>

      <%- await include('@/helpers/widgets-append', {
        _, opt: {}, field: 'productSlots'
      }) %>
    </section>

    <%- await include('@/helpers/widgets-append', {
      _, opt: {}, field: 'productBlockAppend'
    }) %>
  </div>
  <!-- <div class="sections pb-1 pb-sm-2 pb-lg-4 mt-md-5 pt-5"> -->
    <%
    const current_lib = []
    const apx_products = _.cms('apx_products')
    if (Array.isArray(apx_products) && apx_products.length > 0) {      
      apx_products.forEach(item => { 
        const lib = (_.cms(`apx_products/${item}`))
        if(current_lib.length == 0 && lib.identificador.find(el => el == _.state.sku)){
          current_lib.push(lib)
          return
        }
        if(_.state.categories && _.state.categories.length > 0){
          _.state.categories.forEach(cat => {
            if(current_lib.length == 0 && lib.identificador.find(el => el == 'cat_'+ cat._id)){
              current_lib.push(lib)
              return
            }
          })
        }
      })
    }
       
    %>
    
    <div data-customizations="<%= current_lib && current_lib[0] && current_lib[0].customizations ? JSON.stringify(current_lib[0].customizations) : '' %>"></div>
    <% if (current_lib && current_lib[0]) { %>
      <script>
        window.apx_lib = JSON.parse(<%- JSON.stringify(JSON.stringify(current_lib[0])) %>);
        </script>
    <% }else{ %>
      <script>window.apx_lib = []</script>
    <% } %>
    <script>
      window.apx_product = JSON.parse(<%- JSON.stringify(JSON.stringify(_.state)) %>);
    </script>

    
    <script>
      window.sbTestimonialData = {
        filters: {
          product_main_sku: `<%- _.state.sku %>`
        },
        pagination: {
          page:1,
          per_page:1
        }
      };
      //STOREBOOST TESTIMONIAL SCRIPT
      document.addEventListener('DOMContentLoaded', (event) => {
        const url = 'http://localhost:1337/api/data/get';
        const config = window.sbTestimonialConfig || {
          SB_productStarId : 'sb-reviews-product-rating',
          SB_testimonialListId : 'sb-product-testimonials'
        };
        
        const data = window.sbTestimonialData || {
          pagination: {
            page:1,
            per_page:3
          }
        };

        window.sbTestimonialData = data;

        const headers = {
          'Content-Type': 'application/json',
          'app-id': '5',
        };

        const elStars = document.getElementById(config.SB_productStarId);
        const elList = document.getElementById(config.SB_testimonialListId);
        
        if(elStars && elList){
          fetch(url, {
            method: 'POST',
            headers: headers,
            body: JSON.stringify(data),
          })
            .then(response => response.json())
            .then(data => {
              console.log('SB_Testimonials - OK');
            })
            .catch(error => {
              console.error('SB_Testimonials - ERR');
            });
        }else{
          console.error('SB_Testimonials - Set elements on DOM before any call');
        }

        const SB_testimonials = {
          setProductStars: function(rating, el){
            if(!el.childNodes.length){

            }
          },
          loadMoreTestimonials: function(per_page, current_page){
            window.sbTestimonialData.pagination.page++            
            fetch(url, {
              method: 'POST',
              headers: headers,
              body: JSON.stringify(window.sbTestimonialData),
            })
              .then(response => response.json())
              .then(data => {
                console.log('SB_Testimonials - Page ' + window.sbTestimonialData.pagination.page);
              })
              .catch(error => {
                console.error('SB_Testimonials - ERR Page ' + window.sbTestimonialData.pagination.page);
              });
          }

        }
      })
    </script>
  <!-- </div> -->
<div class="apx_tabs_content">
  <% if (_.state.body_html) { %>
    <div class="_details content">
      <div class="apx_backdrop" data-tab="details"></div>
      <div class="container-fluid p-0">
        <div class="heading py-3 px-4 position-relative">
          Detalhes do Produto
          <button type="button" class="apx_close" data-tab="details"></button>
        </div>
        <div class="py-3 px-4 markdown html-clearfix my-0">
          <%- _.state.body_html.replace(
            /<img ([^/>]+)?src=['"]([^'"]+)['"]([^/>]+)?\/?>/g,
            '<img class="lozad" data-src="$2" $1 $3>'
          ).replace(
            /<img class="lozad" data-src="([^'"]+)"([^>]+)class=['"]([^'"]+)['"]([^/>]+)?>/g,
            '<img class="lozad $3" data-src="$1" $2 $4>'
          ) %>

          
            <% if (_.state.specifications) { %>
              <hr></hr>
              
              <section id="product-specs" class="product-specs">
                <div class="">
                  <ul class="p-0 m-0">
                    
                      <% for (const gridId in _.state.specifications) {
                        if (_.state.specifications[gridId]) {
                          %>
                          <li>
                            <div class="text-muted">
                              <%= _.ecomUtils.gridTitle(gridId, _.grids) %>
                            </div>
                            <div>
                              <%= _.ecomUtils.specTextValue(_.state, gridId, _.grids) %>
                            </div>
                          </li>
                          <%
                        }
                      } %>
                    
                  </ul>
                </div>
              </section>
            <% } %>          
            <img src="/img/medidas2.jpg"/>
        </div>
        
      </div>
    </div>
  <% } %>
<%
if(current_lib_ && current_lib_[0] && current_lib_[0].list){
  Object.keys(current_lib_[0].list).forEach(key => {
    %>
      
        <div class="_<%- key %> content">
          <div class="apx_backdrop" data-tab="<%= key %>"></div>
          <div class="container-fluid p-0">
            <div class="heading py-3 px-4 position-relative">
              <%= current_lib_[0].list[key].title %>
              <button type="button" class="apx_close" data-tab="<%= key %>"></button>
            </div>
            <div class="py-3 px-4 markdown html-clearfix my-0">
              <%- _.md.render(current_lib_[0].list[key].content) %>
            </div>
          </div>
        </div>
      
    <%
  })
}
%>
</div>
<%
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: _.state.sku,
  description: _.state.short_description || _.state.meta_description || _.ecomUtils.name(_.state),
  name: _.ecomUtils.name(_.state),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${_.state.slug}`,
    availability: `${(_.ecomUtils.inStock(_.state) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(_.state),
    itemCondition: `http://schema.org/${(_.state.condition === 'new' ? 'New' : 'Used')}Condition`,
    priceValidUntil: _.ecomUtils.onPromotion(_.state) && _.state.price_effective_date && _.state.price_effective_date.end
      ? _.state.price_effective_date.end.slice(0, 10)
      : undefined,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}
if (_.state.brands && _.state.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: _.state.brands[0].name
  }
}
if (_.state.pictures && _.state.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(_.state, null, 'zoom').url
    .replace(/(\w+\.)?(ecoms\d)\.com/i, '$2-nyc3.nyc3.cdn.digitaloceanspaces.com')
}
if (_.state.mpn && _.state.mpn[0]) {
  productJsonLd.mpn = _.state.mpn[0]
}
if (_.state.gtin && _.state.gtin[0]) {
  productJsonLd.gtin = _.state.gtin[0]
}
%>
<script id="product-block-jsonld" type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>
<script type="text/javascript">
  setTimeout(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const variationId = urlParams.get('variation_id');
    const variations = window._context.body && window._context.body.variations;
    if (Array.isArray(variations) && variationId) {
      const selectedVariation = variations.find(variation => variation._id === variationId);
      if (selectedVariation) {
        const $jsonLd = document.querySelector('#product-block-jsonld');
        const jsonLd = JSON.parse($jsonLd.innerText);
        jsonLd.sku = selectedVariation.sku;
        jsonLd.offers.price = selectedVariation.price;
        jsonLd.name = (selectedVariation.name && selectedVariation.name.replace('"', '')) || jsonLd.name;
        jsonLd.offers.url = `${jsonLd.offers.url}?variation_id=${variationId}`;
        document.querySelector('#product-block-jsonld').innerText = JSON.stringify(jsonLd);
      }
    }
  }, 50);
</script>
